{"version":3,"sources":["core/action/index.ts","component/AddTodo.tsx","component/Todo.tsx","component/TodoList.tsx","component/information.tsx","component/home.jsx","component/input.jsx","component/signUp.jsx","component/addTodo/toDo.jsx","component/addTodo/toDoList.jsx","action/index.jsx","component/addTodo/addTodo.jsx","component/addTodo/index.jsx","reducer/todo.tsx","reducer/index.tsx","component/youtube/index.jsx","menu.tsx","component/Login.jsx","component/inquiry.jsx","component/complete.jsx","router/inquiry-route.tsx","App.js","reportWebVitals.js","index.tsx"],"names":["nextTodoId","AddTodo","input","dispatch","useDispatch","onSubmit","e","preventDefault","text","value","trim","console","log","type","id","addTodo","ref","element","Todo","connect","state","todos","className","map","todo","Information","useEffect","Home","Error","styled","span","InputForm","withFormik","mapPropsToValues","props","values","name","email","password","confirmpassword","context","handleSubmit","history","push","validationSchema","Yup","shape","max","matches","required","min","confirmPassword","oneOf","errors","touched","href","withRouter","SignupForm","TodoList","useSelector","event","Button","variant","ToDo","action","completed","combineReducers","todos2","YoutubeList","options","method","url","headers","axios","request","then","response","data","catch","error","style","margin","textAlign","src","frameborder","Menu","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","mr","Typography","component","InquiryForm","Inquiry","useHistory","useState","count","setCount","count2","location","Login","onClick","prev","Complete","InquiryRouter","exact","path","Inquirycomplete","store","createStore","rootReducer","App","basename","process","to","SignUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4af455ef.chunk.js","sourcesContent":["let nextTodoId = 0;\nexport const addTodo = (text: any) => ({\n  type: \"ADD_TODO\",\n  id: nextTodoId++,\n  text,\n});\n","import { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../core/action/index\";\n\nconst AddTodo = () => {\n  const dispatch = useDispatch();\n  let input: any;\n  return (\n    <div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          const text = input.value.trim();\n          input.value = \"\";\n          if (!text) {\n            return;\n          }\n          console.log(text);\n\n          dispatch(addTodo(text));\n        }}\n      >\n        <input ref={(element) => (input = element)}></input>\n        <button type=\"submit\">追加する</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddTodo;\n","import React from \"react\";\n\nconst Todo = ({ text }: { text: any }) => (\n  <li>\n    <span>{text}</span>\n  </li>\n);\n\nexport default Todo;\n","import { useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport Todo from \"./Todo\";\n\nconst TodoList = (todos: any | undefined) => (\n  // const TodoList = () => {\n  // const todos = useSelector((state: any) => state.todos);\n  // {\n  //   todos !== undefined ? \"あり\" : \"なし\"\n  // });\n  // {\n  //   todos !== undefined ? (\n  <ul className=\"todo-list\">\n    {todos?.map((todo: any) => (\n      <Todo key={todo.id} {...todo}></Todo>\n    ))}\n  </ul>\n  //   ) : (\n  //     \"\"\n  //   );\n  // }\n);\n\nconst mapStateToProps = (state: any) => ({ todos: state.todos });\n\nexport default connect(mapStateToProps)(TodoList);\n","import { useEffect } from \"react\";\n// import store from \"../stores\";\n// import axios from \"axios\";\nimport AddTodo from \"./AddTodo\";\nimport TodoList from \"./TodoList\";\n\n// import { Provider } from \"react-redux\";\n// import store from \"../stores/index\";\n// import { connect } from \"formik\";\n\n// const options = {\n//   method: \"GET\",\n//   url: \"https://www.googleapis.com/youtube/v3/search?id=7lCDEYXw3mM&key=AIzaSyDAFW44cRSCgB7rYplcjRHh2kr8oy1Rscg&part=snippet\",\n//   headers: {},\n// };\n\n// axios\n//   .request(options)\n//   .then(function (response) {\n//     console.log(response.data);\n//   })\n//   .catch(function (error) {\n//     console.error(error);\n//   });\n\nconst Information = () => {\n  useEffect(() => {\n    console.log(\"初期表示\");\n    // console.log(store.getState());\n  }, []);\n\n  return (\n    <>\n      <h2>Information</h2>\n      <div>\n        <AddTodo></AddTodo>\n        <TodoList></TodoList>\n      </div>\n    </>\n  );\n};\n\nexport default Information;\n","const Home = () => {\n  return <h2>Home</h2>;\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Form, withFormik, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router\";\n\nconst Error = styled.span`\n  color: red;\n`;\n\nconst InnerForm = ({ props, errors, touched }) => (\n  <Form>\n    名前\n    <Field name=\"name\" />\n    <Error>\n      {touched.name && errors.name && (\n        <div className=\"errorText\">{errors.name}</div>\n      )}\n    </Error>\n    メールアドレス\n    <Field name=\"email\" />\n    <Error>\n      {touched.email && errors.email && (\n        <div className=\"errorText\">{errors.email}</div>\n      )}\n    </Error>\n    パスワード\n    <Field name=\"password\" type=\"password\" />\n    <Error>\n      {touched.password && errors.password && (\n        <div className=\"errorText\">{errors.password}</div>\n      )}\n    </Error>\n    パスワードの確認\n    <Field name=\"confirmpassword\" type=\"password\" />\n    <Error>\n      {touched.confirmPassword && errors.confirmPassword && (\n        <div className=\"errorText\">{errors.confirmPassword}</div>\n      )}\n    </Error>\n    <button type=\"submit\" id=\"submit\">\n      {\" \"}\n    </button>\n    <button href=\"/inquiry/complete\" type=\"submit\" />\n  </Form>\n);\n\nconst InputForm = withFormik({\n  mapPropsToValues: (props, values) => ({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\",\n    context: \"\",\n    props: values,\n  }),\n  handleSubmit: (props, values) => {\n    //console.log(values.props.history);\n    values.props.history.push(\"/inquiry/complete\");\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string()\n      .max(30, \"名前は30文字以内で入力してください\")\n      .matches(/^[^\\x20-\\x7e]*$/, \"全角文字のみ\") //全角文字のみ（空文字OK）\n      .required(\"名前は必須項目です\"),\n    email: Yup.string()\n      .email()\n      .max(30, \"メールアドレスは30文字以内で入力してください\")\n      .required(\"本ールアドレスは必須項目です\"),\n    password: Yup.string()\n      .max(30, \"パスワードは30文字以内で入力してください\")\n      .min(8, \"パスワードは８文字以上で入力してください\")\n      .required(\"パスワードは必須項目です\"),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\")], \"passwordが一致しません。\")\n      .required(\"パスワードは必須項目です\"),\n  }),\n})(InnerForm);\n\nexport default withRouter(InputForm);\n","import InputForm from \"./input\";\n\nconst SignupForm = () => {\n  return (\n    <div>\n      <h2>会員登録画面</h2>\n      <InputForm></InputForm>\n    </div>\n  );\n};\n\nexport default SignupForm;\n","import React from \"react\";\n\nconst Todo = ({ text }) => (\n  <li>\n    <span>{text}</span>\n  </li>\n);\n\nexport default Todo;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Todos from \"./toDo\";\n\nconst TodoList = () => {\n  const todos = useSelector((state) => state.todos);\n  return (\n    <ul className=\"todo-list\">\n      {todos?.map((todo) => (\n        <Todos key={todo.id} {...todo}></Todos>\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","let nextTodoId = 0;\nexport const addTodo = (text) => ({\n  type: \"ADD_TODO\",\n  id: nextTodoId++,\n  text,\n});\n\nexport const loadYoutube = (text) => ({\n  type: \"LOAD_DATA\",\n  id: nextTodoId++,\n  text,\n});\n","import React from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { addTodo } from \"../../action\";\n\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\n\nconst AddTodo = () => {\n  let input;\n  const dispatch = useDispatch();\n\n  // const handleChange_input = (e)  =>{\n  //  input= e.target.input\n  // }\n  // };\n  return (\n    <div>\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          const text = input.value.trim();\n          input.value = \"\";\n          if (!text) {\n            return;\n          }\n          console.log(text); // 確認用\n          dispatch(addTodo(text));\n        }}\n      >\n        {/* <TextField\n          id=\"outlined-basic\"\n          label=\"Outlined\"\n          variant=\"outlined\"\n          type=\"input\"\n          // onChange={handleChange_input()}\n          ref={(element) => (input = element)}\n        /> */}\n        <input ref={(element) => (input = element)} />\n        <Button variant=\"contained\" type=\"submit\">\n          Add\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default connect()(AddTodo);\n","import TodoList from \"./toDoList\";\nimport AddTodo from \"./addTodo\";\n\nconst ToDo = () => {\n  return (\n    <div>\n      <AddTodo />\n      <TodoList />\n    </div>\n  );\n};\n\nexport default ToDo;\n","const todos = (state = [], action: any) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false,\n        },\n      ];\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n","import { combineReducers } from \"redux\";\nimport todos from \"./todo\";\nimport todos2 from \"./todo\";\n\nexport default combineReducers({\n  todos,\n  todos2,\n});\n","import axios from \"axios\";\nimport { useEffect } from \"react\";\n\nconst YoutubeList = () => {\n  const options = {\n    method: \"GET\",\n    url: \"https://www.googleapis.com/youtube/v3/search?id=7lCDEYXw3mM&key=AIzaSyDAFW44cRSCgB7rYplcjRHh2kr8oy1Rscg&part=snippet\",\n    headers: {},\n  };\n\n  useEffect(() => {\n    axios\n      .request(options)\n      .then(function (response) {\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }, []);\n\n  const url = \"https://www.youtube.com/embed/ix_8pdlaj4A\";\n\n  // var player;\n  // function onYouTubeIframeAPIReady() {\n  //   player = new YT.Player(\"player\", {\n  //     height: \"360\",\n  //     width: \"640\",\n  //     videoId: \"M7lc1UVf-VE\",\n  //     events: {\n  //       onReady: onPlayerReady,\n  //       onStateChange: onPlayerStateChange,\n  //     },\n  //   });\n  // }\n\n  return (\n    <div>\n      <div style={{ margin: \"20px\", textAlign: \"center\" }}>\n        <iframe src={url} frameborder=\"0\" />\n      </div>\n      <button></button>\n    </div>\n  );\n};\n\nexport default YoutubeList;\n","import AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\n\nexport const Menu = () => {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            FootBall\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { Form, withFormik, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router\";\n\nconst Error = styled.span`\n  color: red;\n`;\n\nconst InnerForm = ({ props, errors, touched }) => (\n  <Form>\n    <Field name=\"name\" id=\"name\" />\n    <Error>\n      {touched.name && errors.name && (\n        <div className=\"errorText\">{errors.name}</div>\n      )}\n    </Error>\n    <Field name=\"email\" id=\"email\" />\n    <Error>\n      {touched.email && errors.email && (\n        <div className=\"errorText\">{errors.email}</div>\n      )}\n    </Error>\n    <Field name=\"context\" id=\"context\" />\n    <button type=\"submit\" id=\"submit\"></button>\n    <button href=\"/inquiry/complete\" type=\"submit\" />\n  </Form>\n);\n\nconst InquiryForm = withFormik({\n  mapPropsToValues: (props, values) => ({\n    name: \"\",\n    email: \"\",\n    context: \"\",\n    props: values,\n  }),\n  handleSubmit: (props, values) => {\n    //console.log(values.props.history);\n    values.props.history.push(\"/inquiry/complete\");\n  },\n  //   handleReset: (props) => ({\n  //     name: \"\",\n  //     email: \"\",\n  //     context: \"\",\n  //   }),\n  validationSchema: Yup.object().shape({\n    name: Yup.string()\n      .max(30, \"名前は30文字以内で入力してください\")\n      .matches(/^[^\\x20-\\x7e]*$/, \"全角文字のみ\") //全角文字のみ（空文字OK）\n      .required(\"名前は必須項目です\"),\n    email: Yup.string()\n      .max(30, \"メールアドレスは30文字以内で入力してください\")\n      .required(\"本ールアドレスは必須項目です\"),\n  }),\n})(InnerForm);\n\nexport default withRouter(InquiryForm);\n","import React, { useState, useEffect } from \"react\";\n// import { Form, useFormik } from \"formik\";\nimport Login from \"./Login\";\nimport { useHistory } from \"react-router\";\n// import history from \"./history\";\n\nconst Inquiry = (props) => {\n  const history = useHistory();\n\n  // const move = (e) => {\n  //   console.log(history.location);\n  //   props.history.push(\"/inquiry/complete\"); // 画面遷移\n  // };\n\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    var count2 = count + 1;\n    console.log(history.location);\n    console.log(count2);\n    //document.title = `${count}回クリックされました`;\n  });\n\n  const handleToAboutPage = () => {\n    console.log(props);\n    props.history.push(\"/\");\n  };\n\n  const handleToAboutPage2 = () => {\n    props.history.push(\"/information\");\n  };\n\n  //   const goToPages = () => {\n  //     history.push(\"/pages\");\n  //   };\n\n  return (\n    <div>\n      <h2>お問い合わせフォーム</h2>\n      {/* <Form> */}\n      <Login props></Login>\n      {/* <form action=\"\"> */}\n      {count}\n      <button onClick={() => setCount((prev) => prev + 1)}>ホームへ</button>\n      <button onClick={handleToAboutPage}>ホームへ</button>\n      <button onClick={handleToAboutPage2}>情報</button>\n      {/* </form> */}\n\n      {/* </Form> */}\n    </div>\n  );\n};\n\nexport default Inquiry;\n\n// /**\n//  * フォームの型\n//  */\n// type FormValueType = {\n//   email: string;\n//   firstName: string;\n//   lastName: string;\n// };\n\n// /**\n//  * フォームのエラーの型定義\n//  */\n// type FormErrorType = {\n//   [P in keyof FormValueType]?: string;\n// };\n\n// /**\n//  * バリデーション用の関数\n//  * @param values\n//  */\n// const validate = (values: FormValueType): FormErrorType => {\n//   const errors: FormErrorType = {};\n\n//   if (!values.firstName) {\n//     errors.firstName = \"このフィールドは必須です\";\n//   } else if (values.firstName.length > 15) {\n//     errors.firstName = \"１５文字以下で入力してください\";\n//   }\n\n//   if (!values.lastName) {\n//     errors.lastName = \"このフィールドは必須です\";\n//   } else if (values.lastName.length > 15) {\n//     errors.lastName = \"１５文字以下で入力してください\";\n//   }\n\n//   if (!values.email) {\n//     errors.email = \"このフィールドは必須です\";\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n//     errors.email = \"正しいメールアドレスを入力してください\";\n//   }\n\n//   return errors;\n// };\n\n// /**\n//  * 送信処理\n//  * @param values\n//  */\n// const onSubmit = (values: FormValueType) => {\n//   alert(JSON.stringify(values, null, 2));\n// };\n\n// /**\n//  * 登録フォーム\n//  */\n// const SignupForm = () => {\n//   /**\n//    * フォームの定義\n//    */\n//   const formik = useFormik<FormValueType>({\n//     initialValues: { email: \"\", firstName: \"\", lastName: \"\" },\n//     validate: validate,\n//     onSubmit: onSubmit,\n//   });\n\n//   return (\n//     <div>\n//       <form onSubmit={formik.handleSubmit}>\n//         <label htmlFor=\"email\">メールアドレス</label>\n//         <input\n//           id=\"email\"\n//           name=\"email\"\n//           type=\"email\"\n//           onChange={formik.handleChange}\n//           value={formik.values.email}\n//         ></input>\n//         {formik.errors.email ? <div>{formik.errors.email}</div> : null}\n//         <label htmlFor=\"lastName\">姓</label>\n//         <input\n//           id=\"lastName\"\n//           name=\"lastName\"\n//           type=\"text\"\n//           onChange={formik.handleChange}\n//           value={formik.values.lastName}\n//         ></input>\n//         {formik.errors.lastName ? <div>{formik.errors.lastName}</div> : null}\n//         <label htmlFor=\"firstName\">名</label>\n//         <input\n//           id=\"firstName\"\n//           name=\"firstName\"\n//           type=\"text\"\n//           onChange={formik.handleChange}\n//           value={formik.values.firstName}\n//         ></input>\n//         {formik.errors.firstName ? <div>{formik.errors.firstName}</div> : null}\n//         <button\n//           type=\"submit\"\n//           onSubmit={() => {\n//             formik.handleSubmit();\n//           }}\n//         >\n//           送信\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default SignupForm;\n","const Complete = () => {\n  return (\n    <div>\n      <h2>Complete</h2>\n      <div name=\"message\" id=\"message\">\n        お問合せありがとうございます。受付完了いたしました、回答までお時間いただきますのでしばらくお待ちください。\n      </div>\n    </div>\n  );\n};\n\nexport default Complete;\n","import Inquiry from \"../component/inquiry\";\nimport Inquirycomplete from \"../component/complete\";\n\n// import { Router, Switch, Route } from \"react-router-dom\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst InquiryRouter = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/inquiry\" component={Inquiry} />\n        <Route path=\"/inquiry/complete\" component={Inquirycomplete} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default InquiryRouter;\n","import \"./App.css\";\n\nimport Information from \"./component/information\";\nimport Home from \"./component/home\";\nimport SignUp from \"./component/signUp\";\nimport ToDo from \"./component/addTodo/index\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducer/index\";\nimport YoutubeList from \"./component/youtube\";\nimport { Menu } from \"./menu\";\nimport InquiryRouter from \"./router/inquiry-route\";\n\nconst store = createStore(rootReducer);\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Menu></Menu>\n        <div>\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/inquiry\">Inquiry</Link>\n              </li>\n              <li>\n                <Link to=\"/information\">Users</Link>\n              </li>\n              <li>\n                <Link to=\"/signUp\">会員登録</Link>\n              </li>\n              <li>\n                <Link to=\"/add-todo\">やることリスト</Link>\n              </li>\n              <li>\n                <Link to=\"/youtube\">YouTube</Link>\n              </li>\n            </ul>\n          </nav>\n\n          <Switch>\n            <Route path=\"/information\" component={Information} />\n            <Route path=\"/inquiry\" component={InquiryRouter} />\n            {/* <Route exact path=\"/inquiry\" component={Inquiry} />\n            <Route path=\"/inquiry/complete\" component={Inquirycomplete} /> */}\n            <Route path=\"/signUp\" component={SignUp} />\n            <Route path=\"/add-todo\" component={ToDo} />\n            <Route path=\"/youtube\" component={YoutubeList} />\n\n            <Route path=\"/\" component={Home} />\n          </Switch>\n          <footer>@Sora Hoshino All Rights Reserved.</footer>\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}